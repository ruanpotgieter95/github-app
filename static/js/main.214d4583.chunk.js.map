{"version":3,"sources":["routes/Routes.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/App/index.js","actions/loginActions.js","actions/types.js","actions/repositoryActions.js","components/Navbar/index.js","components/Card/index.js","components/Avatar/index.js","api/index.js","components/SearchBar/index.js","api/search.js","components/Page/index.js","components/Login/index.js","components/RepositoryList/index.js","__helpers__/helpers.js","components/RepositoryCard/index.js","components/RepositoryIssues/index.js","components/RepositoryIssueCard/index.js","components/RepositoryPlaceholder/index.js","components/IssueFilters/index.js","components/RepositoryShowMore/index.js","reducers/authReducer.js","reducers/repositoryReducer.js","reducers/index.js","Root.js","__helpers__/sessionStorage.js","index.js","assets/logo/Octocat.png"],"names":["PublicRoute","exact","path","Login","PrivateRoute","Navbar","Page","SearchBar","RepositoryPlaceholder","RepositoryList","RepositoryIssues","to","children","rest","isAuthenticated","useSelector","state","auth","useLocation","pathname","search","location","split","timeOut","newestOnTop","preventDuplicates","position","getState","toastr","transitionIn","transitionOut","progressBar","closeOnToastrClick","Routes","login","isFetching","type","setRepositoryList","list","repositoryLoading","loading","setRepositoryIssues","issues","dispatch","useDispatch","history","useHistory","src","Logo","alt","className","onClick","push","imgURL","axios","create","baseURL","timeout","useParams","useState","searchTerm","setSearchTerm","onSubmit","event","preventDefault","a","api","get","response","data","console","error","searchRepositories","placeholder","value","onChange","target","required","repositoryList","repository","items","repositoryTotal","total_count","shallowEqual","length","map","RepositoryCard","key","node_id","formatDate","date","moment","format","showMore","setShowMore","fullName","full_name","company","project","Card","Avatar","owner","avatar_url","window","open","html_url","name","date_created","description","RepositoryShowMore","details","pieOptions","title","display","text","fontSize","legend","maintainAspectRatio","comp","proj","filter","total","openTotal","closeTotal","forEach","issue","pieData","dataDetails","labels","datasets","label","backgroundColor","borderColor","useEffect","searchRepositoryIssues","IssueFilters","options","width","height","RepositoryIssueCard","user","created_at","updated_at","closed_at","comments","filterIssues","forks","language","stargazers_count","watchers","url","initialState","combineReducers","action","toastrReducer","serializedState","sessionStorage","getItem","JSON","parse","e","warn","loadFromSessionStorage","store","createStore","reducers","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveToSessionStorage","render","Root","App","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.214d4583.chunk.js","sourcesContent":["import React from 'react';\nimport { HashRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { PrivateRoute, PublicRoute } from 'routes';\n\nimport { Navbar, Login, RepositoryList, RepositoryIssues, SearchBar, RepositoryPlaceholder, Page } from 'components';\n\nexport default () => {\n    return (\n        <Router>\n            <Switch>\n                <PublicRoute exact path=\"/login\">\n                   <Login />\n                </PublicRoute>\n                <PrivateRoute exact path=\"/repositories\">\n                    <Navbar />\n                    <Page>\n                        <SearchBar />\n                        <RepositoryPlaceholder />\n                        <RepositoryPlaceholder />\n                        <RepositoryPlaceholder />\n                    </Page>\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/repositories/:search\">\n                    <Navbar />\n                    <Page>\n                        <SearchBar />\n                        <RepositoryList />\n                    </Page>\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/repo/:comp/:proj/issues/:filter\">\n                    <Navbar />\n                    <RepositoryIssues />\n                </PrivateRoute>\n                <Redirect to=\"/repositories\" />\n            </Switch>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default ({ children, ...rest }) => {\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const { pathname, search } = useLocation();\n\n    return (\n      <Route {...rest}>\n        {isAuthenticated ? children : <Redirect to={`/login?redirect=${pathname}${search}`} />}\n      </Route>\n    )\n  };\n\n\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default ({ children, ...rest }) => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const location = useLocation();\n  \n    return (\n      <Route {...rest}>\n          {!isAuthenticated ? children : <Redirect to={`${location.search.split('=')[1]}`} />}\n      </Route>\n    );\n  }","import React from 'react';\nimport { Routes } from 'routes';\nimport ReduxToastr from 'react-redux-toastr';\n\nexport default () => {\n    return (\n        <>\n            <ReduxToastr\n                timeOut={4000}\n                newestOnTop={true}\n                preventDuplicates\n                position=\"bottom-left\"\n                getState={(state) => state.toastr} // This is the default\n                transitionIn=\"fadeIn\"\n                transitionOut=\"fadeOut\"\n                progressBar\n                closeOnToastrClick/>\n            <Routes />\n        </>\n    );\n}","import { LOGIN } from 'actions/types';\n\nexport const login = (isFetching=false, isAuthenticated=false) => {\n    return {\n        type: LOGIN,\n        isFetching,\n        isAuthenticated\n    }\n}","export const LOGIN = 'LOGIN';\n\nexport const SET_REPOSITORY_LIST = 'SET_REPOSITORY_LIST';\nexport const REPOSITORY_LOADING = 'REPOSITORY_LOADING';\nexport const SET_REPOSITORY_ISSUES = 'SET_REPOSITORY_ISSUES';","import { SET_REPOSITORY_LIST, REPOSITORY_LOADING, SET_REPOSITORY_ISSUES } from 'actions/types';\n\nexport const setRepositoryList = (list=[]) => {\n    return {\n        type: SET_REPOSITORY_LIST,\n        list\n    }\n}\n\nexport const repositoryLoading = (loading=false) => {\n    return {\n        type: REPOSITORY_LOADING,\n        loading\n    }\n}\n\nexport const setRepositoryIssues = (issues=[]) => {\n    return {\n        type: SET_REPOSITORY_ISSUES,\n        issues\n    }\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'actions';\nimport Logo from 'assets/logo/Octocat.png';\nimport './styles.scss';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    return (\n        <nav>\n            <div>\n                <img src={Logo} alt=\"\" />\n                <span className=\"hover button\" \n                    onClick={() => history.push('/repositories')}\n                >Repositories</span>\n            </div>\n            <span className=\"hover\" \n                onClick={() => dispatch(login(false, false))}\n            >Logout</span>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport './styles.scss';\n\nexport default ({children, onClick}) => (\n    <div className=\"card\" onClick={onClick}>\n        {children}\n    </div>\n)","import React from 'react';\nimport './styles.scss';\n\nexport default ({imgURL, onClick}) => {\n\n    return (\n        <img className=\"avatar hover\" src={imgURL} alt=\"\" onClick={onClick} />\n    )\n}","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.github.com/',\n    timeout: 10000\n});\n\nexport { searchRepositories, searchRepositoryIssues } from 'api/search';","import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { searchRepositories } from 'api';\nimport './styles.scss';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { search } = useParams();\n    const [searchTerm, setSearchTerm ] = useState(search || '');\n\n    const submitSearch = event => {\n        event.preventDefault();\n        dispatch(searchRepositories(searchTerm));\n        history.push(`/repositories/${searchTerm}`)\n    }\n\n    return (\n        <form className=\"searchBar\" onSubmit={submitSearch}>\n            <input placeholder=\"search repositories\" \n                value={searchTerm} onChange={({target}) => setSearchTerm(target.value)}\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import api from 'api';\nimport { setRepositoryList, repositoryLoading, setRepositoryIssues } from 'actions';\nimport {toastr} from 'react-redux-toastr'\n\nexport const searchRepositories = (search=\"\") => {\n\n    return async dispatch => {\n\n        dispatch(repositoryLoading(true));\n\n        try {\n            const response = await api.get(`/search/repositories?q=${search}`);\n            dispatch(setRepositoryList(response.data));\n        } catch(e) {\n            console.error('An error occured', e);\n            toastr.error('Search Error', 'There was a problem with your search');\n        }\n\n        dispatch(repositoryLoading(false));\n    }\n}\n\nexport const searchRepositoryIssues = (comp=\"\", proj=\"\", filter=\"all\") => {\n\n    return async dispatch => {\n\n        dispatch(repositoryLoading(true));\n\n        try {\n            const response = await api.get(`/repos/${comp}/${proj}/issues?state=${filter}`);\n            dispatch(setRepositoryIssues(response.data));\n        } catch(e) {\n            console.error('An error occured', e);\n            toastr.error('Issue Error', 'There was an error retrieving the issues');\n        }\n\n        dispatch(repositoryLoading(false));\n\n    }\n}","import React from 'react';\nimport './styles.scss';\n\nexport default ({children}) => {\n\n    return (\n        <div className=\"page\">\n            {children}\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'actions';\nimport Logo from 'assets/logo/Octocat.png';\nimport './styles.scss';\n\nexport default () => {\n    const dispatch = useDispatch();\n\n    const submit = (event) => {\n        event.preventDefault();\n        dispatch(login(false, true));\n    }\n\n    return (\n        <div className=\"login\">\n            <form onSubmit={submit}>\n                <img src={Logo} alt=\"\" />\n                <h3>Login</h3>\n                <sub>Only used to show private/public routes</sub>\n                <sub>Type a fake email and password</sub>\n                <input type=\"email\" required placeholder=\"email\"/>\n                <input type=\"password\" required placeholder=\"password\"/>\n                <button>Login</button>\n            </form>\n        </div>\n    )\n}","import React, { \n    // useEffect \n} from 'react';\nimport { useSelector, shallowEqual, \n    // useDispatch \n} from 'react-redux';\n// import { useParams } from 'react-router-dom';\nimport { RepositoryCard, RepositoryPlaceholder } from 'components';\n\nimport './styles.scss';\n// import { searchRepositories } from 'api';\n\nexport default () => {\n    // const dispatch = useDispatch();\n    // const { search } = useParams();\n    const { repositoryList, loading, repositoryTotal } = useSelector(state => ({\n        repositoryList: state.repository.list.items,\n        repositoryTotal: state.repository.list.total_count,\n        loading: state.repository.loading\n    }), shallowEqual);\n\n    // useEffect(() => {\n    //     dispatch(searchRepositories(search))\n    // },[])\n\n    return (\n        <div className=\"repository_list\">\n            {!loading && <h2>Found {repositoryTotal} results</h2>}\n            {loading && (<>\n                    <h3>Loading...</h3>\n                    <RepositoryPlaceholder />\n                    <RepositoryPlaceholder />\n                    <RepositoryPlaceholder />\n                </>\n            )}\n            {(!loading && repositoryList.length === 0) && <h3>No Results found</h3>}\n            {!loading && repositoryList.map(repository => <RepositoryCard key={repository.node_id} repository={repository} />)}\n        </div>\n    )\n}","import moment from 'moment';\n\nexport const pieData = (issues=[]) => {\n    const total = issues.length;\n    let openTotal = 0;\n    let closeTotal = 0;\n    \n    issues.forEach(issue => {\n        if(issue.state === \"open\") {\n            openTotal += 1;\n        } else if(issue.state === \"closed\") {\n            closeTotal += 1;\n        }\n    });\n\n    return { total, openTotal, closeTotal }\n}\n\nexport const formatDate = (date) => moment(date).format('DD MMM YYYY HH:mm');","import React, { useState } from 'react';\nimport { Card, Avatar, RepositoryShowMore } from 'components';\nimport { useHistory } from 'react-router-dom';\nimport { formatDate } from '__helpers__';\nimport './styles.scss';\n\nexport default ({repository}) => {\n    const history = useHistory();\n    const [showMore, setShowMore] = useState(false);\n    const fullName = repository.full_name.split('/');\n    const company = fullName[0];\n    const project = fullName[1];\n\n    return (\n        <Card>\n            <div className=\"repository_card\" >\n                <header className=\"header\">\n                    <Avatar imgURL={repository.owner.avatar_url} \n                        onClick={() => window.open(repository.html_url)}\n                    />\n                    <div>\n                        <h3>{repository.name}</h3>\n                        <sub>{repository.full_name}</sub>\n                    </div>\n                    <button onClick={() => history.push(`/repo/${company}/${project}/issues/all`)}>Issues</button>\n                </header>\n                <main>\n                    <span>Created: {formatDate(repository.date_created)}</span>\n                    <p>{repository.description}</p>\n                </main>\n                <footer className=\"hover\" onClick={() => setShowMore(!showMore)}>\n                    {!showMore && <span>Show more</span>}\n                    {showMore && <RepositoryShowMore details={repository} />}\n                </footer>\n            </div>\n        </Card>\n    )\n}","import React, { useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchRepositoryIssues } from 'api';\nimport { RepositoryIssueCard, IssueFilters } from 'components';\nimport { pieData } from '__helpers__';\nimport './styles.scss';\n\n\nconst pieOptions= {\n    title:{\n      display:true,\n      text:'Current Issues',\n      fontSize:20\n    },\n    legend:{\n      display:true,\n      position:'top'\n    },\n    maintainAspectRatio: false \n  }\n\nexport default () => {\n    const dispatch = useDispatch();\n    const { comp, proj, filter } = useParams();\n    const issues = useSelector(state => state.repository.issues);\n    const data = pieData(issues);\n\n    const dataDetails = {\n        labels: [\"Open\", \"Closed\"],\n        datasets: [\n            {\n                label: \"Issues\",\n                data: [data.openTotal, data.closeTotal],\n                backgroundColor: [\"#3bde00\", \"#b21f00\"],\n                borderColor: \"#ffffff\"\n            }\n        ]\n    }\n\n    useEffect(() => {\n        dispatch(searchRepositoryIssues(comp, proj, filter))\n    }, [comp, proj, filter, dispatch]);\n\n    return (\n        <div className=\"repository_issues\">\n            <IssueFilters />\n            <h3>\"{filter}\" Repository issues for {comp}/{proj}</h3>\n            <sub>Total: {data.total}  Open: {data.openTotal} Closed: {data.closeTotal}</sub>\n            <div className=\"pie\">\n                <Pie data={dataDetails} options={pieOptions} width={400} height={400} />\n            </div>\n            {issues.map(issue => <RepositoryIssueCard key={issue.node_id} issue={issue} />)}\n        </div>\n    )\n}","import React from 'react';\nimport { Card, Avatar } from 'components';\nimport { formatDate } from '__helpers__';\nimport './styles.scss';\n\nexport default ({issue}) => {\n    return (\n        <Card>\n            <div className=\"repository_issue_card_header\">\n                <Avatar imgURL={issue.user.avatar_url} onClick={() => window.open(issue.user.html_url)}/>\n                <div className=\"title\">\n                    <span>State: {issue.state}</span>\n                    <sub>{issue.title}</sub>\n                </div>\n                <button className=\"hover\" onClick={() => window.open(issue.html_url)}>View</button>\n            </div>\n            <div className=\"repository_issue_card_footer\">\n                <div className=\"dates\">\n                    <span>Created: {formatDate(issue.created_at)}</span>\n                    <span>Updated: {formatDate(issue.updated_at)}</span>\n                    {issue.closed_at && <span>Closed: {formatDate(issue.closed_at)}</span>}\n                </div>\n                <span>Comments: {issue.comments}</span>\n            </div>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card } from 'components';\n\nexport default () => {\n\n    return (\n        <Card />\n    )\n}","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './styles.scss';\n\nexport default () => {\n    const history = useHistory();\n    const {comp, proj, filter } = useParams();\n\n    const filterIssues = (type) => {\n        history.push(`/repo/${comp}/${proj}/issues/${type}`);\n    }\n\n    return (\n        <div className=\"issue_filters\">\n            <button className={`${filter === 'all' && 'button_active'}`} \n                value='all' \n                onClick={({target}) => filterIssues(target.value)}>All</button>\n            <button className={`${filter === 'open' && 'button_active'}`} \n                value='open' \n                onClick={({target}) => filterIssues(target.value)}>Open</button>\n            <button className={`${filter === 'closed' && 'button_active'}`} \n                value='closed' \n                onClick={({target}) => filterIssues(target.value)}>Closed</button>\n        </div>\n    )\n}","import React from 'react';\nimport './styles.scss';\n\nexport default ({details}) => {\n    return (\n        <div className=\"repository_show_more\">\n            <div>\n                <span>Forks: {details.forks}</span>\n                <span>Language: {details.language}</span>\n            </div>\n            <div>\n                <span>Stargazers: {details.stargazers_count}</span>\n                <span>Watchers: {details.watchers}</span>\n            </div>\n            <span>URL: {details.url}</span>\n        </div>\n    )\n}","import { LOGIN } from 'actions/types';\n\nconst initialState = {\n    isFetching: false, \n    isAuthenticated: false\n}\n\nexport default (state=initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {...state,\n                isFetching: action.isFetching,\n                isAuthenticated: action.isAuthenticated\n            };\n        default: \n            return state;\n    }\n}","import { SET_REPOSITORY_LIST, REPOSITORY_LOADING, SET_REPOSITORY_ISSUES } from 'actions/types';\n\nconst initialState = {\n    list: {\n        items: [],\n        total_count: 0\n    },\n    issues: [],\n    loading: false\n}\n\nexport default (state=initialState, action) => {\n    switch (action.type) {\n        case SET_REPOSITORY_LIST:\n            return {...state,\n                list: action.list\n            };\n        case REPOSITORY_LOADING:\n            return {...state,\n                loading: action.loading\n            }\n        case SET_REPOSITORY_ISSUES:\n            return {...state, \n                issues: action.issues\n            }\n        default: \n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport authReducer from 'reducers/authReducer';\nimport repositoryReducer from 'reducers/repositoryReducer';\nimport {reducer as toastrReducer} from 'react-redux-toastr';\n\nexport default combineReducers({\n    auth: authReducer,\n    repository: repositoryReducer,\n    toastr: toastrReducer\n});","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducers from 'reducers';\nimport { saveToSessionStorage, loadFromSessionStorage } from '__helpers__';\n\nexport default ({ children, initialState = loadFromSessionStorage()}) => {   \n    const store = createStore(\n        reducers,\n        initialState,\n        applyMiddleware(thunkMiddleware)\n    );   \n\n    store.subscribe(() =>  saveToSessionStorage({\n        ...store.getState().auth.isAuthenticated && {\n            auth: store.getState().auth,\n            repository: store.getState().repository\n        }\n    }));\n\n    return (\n        <Provider store={store}>\n            {children}\n        </Provider>\n    );\n};","export const loadFromSessionStorage = () => {\n    try {\n        const serializedState = window.sessionStorage.getItem('state');\n        if(serializedState === null) return {};\n        return JSON.parse(serializedState);\n    } catch(e) {\n        console.warn(e);\n        return {};\n    }\n}\n\nexport const saveToSessionStorage = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem('state', serializedState);\n    } catch(e) {\n        console.warn(e);\n    }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from 'components';\nimport Root from 'Root';\nimport 'index.scss';\n\nrender(\n    <Root>\n        <App />\n    </Root>,\n    document.querySelector('#root')\n);","module.exports = __webpack_public_path__ + \"static/media/Octocat.0ba2aa20.png\";"],"sourceRoot":""}